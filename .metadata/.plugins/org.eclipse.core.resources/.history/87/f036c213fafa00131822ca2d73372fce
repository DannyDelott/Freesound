import java.util.ArrayList;
import java.util.List;

import org.apache.http.Header;
import org.apache.http.message.BasicHeader;

import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;

public class Sound {

	// ///////////////////
	// GLOBAL VARIABLES //
	// / /////////////////

	// the raw JSON object
	JsonObject json;

	// values found in the search results
	private int id;
	private String name;
	private String username;
	private List<String> tags;

	// values found in the Freesound API Sound instance
	private String description;
	private String filetype;

	// Values used with OAuth2 authentication
	private String url;

	// //////////////
	// CONSTRUCTOR //
	// //////////////

	public Sound(JsonObject object) {

		// sets the raw JSON object
		json = object;

		// gets the id
		id = object.get("id").asInt();

		// gets the Freesound API Sound instance
		object = getFreesoundAPISoundInstance();

		// makes download URL
		url = makeUrl();

	}

	private JsonObject getFreesoundAPISoundInstance() {

		// sets headers
		Header[] headers = { new BasicHeader("Content-type", "application/json") };

		// sets Freesound API Sound Instance url
		String tempUrl = "http://www.freesound.org/apiv2/sounds/" + id + "/";

		// executes GET request
		String output = MainsendHttpGet(tempUrl, headers);

	}

	// /////////////////
	// PUBLIC METHODS //
	// /////////////////

	// /////////////////
	// GLBOAL GETTERS //
	// /////////////////

	public JsonObject getJsonObject() {
		return json;
	}

	public int getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public String getUsername() {
		return username;
	}

	public String getUrl() {
		return url;
	}

	public List<String> getTags() {
		return tags;
	}

	// //////////////////
	// PRIVATE METHODS //
	// //////////////////

	/**
	 * Makes the download url used to pull the file from the Freesound API.
	 * NOTE: Requires an access token to actually download the file.
	 * 
	 * @return {@code String} download url
	 */
	private String makeUrl() {
		String temp = "https://www.freesound.org/apiv2/sounds/" + id
				+ "/download/";

		return temp;
	}

	/**
	 * Parses out the "tag" array from the JsobObject
	 * 
	 * @param o
	 *            {@code JsonObject} search result
	 * @return {@code List<String>} tags
	 */
	private List<String> parseTags(JsonObject o) {
		JsonArray a = o.get("tags").asArray();
		List<String> temp = new ArrayList<String>();

		for (int i = 0; i < a.size(); i++) {
			temp.add(a.get(i).asString());
		}

		return temp;
	}

}
